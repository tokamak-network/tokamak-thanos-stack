# Values override for dynamic configuration based on global settings
# This ConfigMap contains the computed values for the monitoring stack

apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "monitoring.fullname" . }}-values-override
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "monitoring.labels" . | nindent 4 }}
data:
  # Storage configuration
  storage-enabled: {{ .Values.global.storage.enabled | quote }}
  {{- if .Values.global.storage.awsRegion }}
  aws-region: {{ .Values.global.storage.awsRegion | quote }}
  {{- end }}
  
  # Computed values for subchart configuration
  values-override.yaml: |
    # kube-prometheus-stack configuration
    kube-prometheus-stack:
      prometheus:
        prometheusSpec:
          {{- if and .Values.global.storage.enabled .Values.global.storage.useStaticProvisioning }}
          # Static provisioning with PVC using existing efs-sc StorageClass
          storageSpec:
            volumeClaimTemplate:
              spec:
                storageClassName: efs-sc
                accessModes: ["ReadWriteMany"]
                resources:
                  requests:
                    storage: 20Gi
          {{- end }}
            
      # Grafana configuration
      grafana:
        {{- if and .Values.global.storage.enabled .Values.global.storage.useStaticProvisioning }}
        # Static provisioning with PVC using existing efs-sc StorageClass
        persistence:
          enabled: true
          storageClassName: efs-sc
          accessModes: ["ReadWriteMany"]
          size: 10Gi
        {{- else }}
        persistence:
          enabled: false
        {{- end }}
          
      # Disable NodeExporter for Fargate compatibility
      nodeExporter:
        enabled: false

{{- if and .Values.thanosStack.releaseName .Values.thanosStack.namespace }}
---
# ConfigMap for Prometheus additional scrape configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "monitoring.fullname" . }}-scrape-config
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "monitoring.labels" . | nindent 4 }}
data:
  additional-scrape-configs.yaml: |
    {{- range $name, $config := .Values.scrapeTargets }}
    {{- if $config.enabled }}
    - job_name: {{ $name }}
      static_configs:
        - targets:
            - "{{ $.Values.thanosStack.releaseName }}-{{ $name }}:{{ $config.port }}"
      metrics_path: {{ $config.path }}
      scrape_interval: {{ $config.interval }}
    {{- end }}
    {{- end }}
{{- end }} 